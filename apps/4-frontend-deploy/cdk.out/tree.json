{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "tutorseekers-uk-dev-frontend-deploy": {
        "id": "tutorseekers-uk-dev-frontend-deploy",
        "path": "tutorseekers-uk-dev-frontend-deploy",
        "children": {
          "tutorseekers-uk-dev-get-vpc": {
            "id": "tutorseekers-uk-dev-get-vpc",
            "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-get-vpc",
            "children": {
              "tutorseekers-uk-dev-publicSubnet1": {
                "id": "tutorseekers-uk-dev-publicSubnet1",
                "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-get-vpc/tutorseekers-uk-dev-publicSubnet1",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.135.0"
                }
              },
              "tutorseekers-uk-dev-publicSubnet2": {
                "id": "tutorseekers-uk-dev-publicSubnet2",
                "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-get-vpc/tutorseekers-uk-dev-publicSubnet2",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.135.0"
                }
              },
              "tutorseekers-uk-dev-lambdaSubnet1": {
                "id": "tutorseekers-uk-dev-lambdaSubnet1",
                "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-get-vpc/tutorseekers-uk-dev-lambdaSubnet1",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.135.0"
                }
              },
              "tutorseekers-uk-dev-lambdaSubnet2": {
                "id": "tutorseekers-uk-dev-lambdaSubnet2",
                "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-get-vpc/tutorseekers-uk-dev-lambdaSubnet2",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.135.0"
                }
              },
              "tutorseekers-uk-dev-databaseSubnet1": {
                "id": "tutorseekers-uk-dev-databaseSubnet1",
                "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-get-vpc/tutorseekers-uk-dev-databaseSubnet1",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.135.0"
                }
              },
              "tutorseekers-uk-dev-databaseSubnet2": {
                "id": "tutorseekers-uk-dev-databaseSubnet2",
                "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-get-vpc/tutorseekers-uk-dev-databaseSubnet2",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.135.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.135.0"
            }
          },
          "tutorseekers-uk-dev-get-next-security-group": {
            "id": "tutorseekers-uk-dev-get-next-security-group",
            "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-get-next-security-group",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.135.0"
            }
          },
          "tutorseekers-uk-dev-next-ec2-role": {
            "id": "tutorseekers-uk-dev-next-ec2-role",
            "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-next-ec2-role",
            "children": {
              "Importtutorseekers-uk-dev-next-ec2-role": {
                "id": "Importtutorseekers-uk-dev-next-ec2-role",
                "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-next-ec2-role/Importtutorseekers-uk-dev-next-ec2-role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.135.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-next-ec2-role/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ec2.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                  "version": "2.135.0"
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-next-ec2-role/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-next-ec2-role/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:GetObject",
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "tutorseekersukdevnextec2roleDefaultPolicy544A0A71",
                        "roles": [
                          {
                            "Ref": "tutorseekersukdevnextec2roleC0B79471"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                      "version": "2.135.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Policy",
                  "version": "2.135.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Role",
              "version": "2.135.0"
            }
          },
          "tutorseekers-uk-dev-next-static-ip": {
            "id": "tutorseekers-uk-dev-next-static-ip",
            "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-next-static-ip",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
              "aws:cdk:cloudformation:props": {
                "domain": "vpc-021263446d882e99f"
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.CfnEIP",
              "version": "2.135.0"
            }
          },
          "tutorseekers-uk-dev-KEY-PAIR": {
            "id": "tutorseekers-uk-dev-KEY-PAIR",
            "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-KEY-PAIR",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.135.0"
            }
          },
          "tutorseekers-uk-dev-next-ec2-instance": {
            "id": "tutorseekers-uk-dev-next-ec2-instance",
            "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-next-ec2-instance",
            "children": {
              "InstanceProfile": {
                "id": "InstanceProfile",
                "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-next-ec2-instance/InstanceProfile",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                  "aws:cdk:cloudformation:props": {
                    "roles": [
                      {
                        "Ref": "tutorseekersukdevnextec2roleC0B79471"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnInstanceProfile",
                  "version": "2.135.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-next-ec2-instance/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::Instance",
                  "aws:cdk:cloudformation:props": {
                    "availabilityZone": "eu-west-2a",
                    "iamInstanceProfile": {
                      "Ref": "tutorseekersukdevnextec2instanceInstanceProfile339C80DD"
                    },
                    "imageId": "ami-0eb260c4d5475b901",
                    "instanceType": "t2.small",
                    "keyName": "TutorSeekers-co-uk-kp",
                    "securityGroupIds": [
                      "sg-0042c42d1bfb49238"
                    ],
                    "subnetId": "subnet-02ad95f488790dde5",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-uk-dev-next-ec2-instance"
                      }
                    ],
                    "userData": {
                      "Fn::Base64": {
                        "Fn::Join": [
                          "",
                          [
                            "#!/bin/bash\necho \"Starting \" > /home/ubuntu/hello.txt\n\n#\n# Writes logging messages to the log file\n#\nlogging() {\n    echo `date \"+%F %T\"` - $1 >> /home/ubuntu/logs/hello.txt\n}\n\n#\n# Create scripts directory\n#\ncreate_scripts_directory() {\n    mkdir /home/ubuntu/scripts\n    chown ubuntu:ubuntu /home/ubuntu/scripts\n\n    mkdir /home/ubuntu/logs\n    chown ubuntu:ubuntu /home/ubuntu/logs\n}\n\n#\n# Create script to upgrade the server\n#\ncreate_script_to_upgrade_server() {\n\n    upgradeScript=\"/home/ubuntu/scripts/upgrade_server.sh\"\n\n    logging \"Create script to upgrade server\"\n\n    echo \"#!/bin/bash\" > $upgradeScript\n    echo \"\" >> $upgradeScript\n    echo \"logging() {\" >> $upgradeScript\n    echo \"    echo \\`date \\\"+%F %T\\\"\\` - \\$1 >> /home/ubuntu/logs/upgrade_server.txt\" >> $upgradeScript\n    echo \"}\" >> $upgradeScript\n    echo \"\" >> $upgradeScript\n    echo \"logging \\\"Starting update\\\"\" >> $upgradeScript\n    echo \"apt-get update -y\" >>  $upgradeScript\n    echo \"logging \\\"Starting upgrade\\\"\" >> $upgradeScript\n    echo \"apt-get upgrade -y\" >> $upgradeScript\n    echo \"logging \\\"Installing nginx\\\"\" >> $upgradeScript\n    echo \"apt install nginx -y\" >> $upgradeScript\n    echo \"logging \\\"Starting nginx\\\"\" >> $upgradeScript\n    echo \"systemctl start nginx\" >> $upgradeScript\n    echo \"logging \\\"Enable nginx\\\"\" >> $upgradeScript\n    echo \"systemctl enable nginx\" >> $upgradeScript\n    echo \"logging \\\"Upgrade complete\\\"\" >> $upgradeScript\n\n    chown ubuntu:ubuntu $upgradeScript\n    chmod 755 $upgradeScript\n\n    logging \"Completed creating script\"\n}\n\n# \n# Create the nginx config file for the domain. We then run the certbot to create the encryption, this \n# will change the file to add the encryption details.\n#\ncreate_nginx_conf_file() {\n    logging \"Creating nginx conf file\"\n\n    logging \"Create script to upgrade server\"\n\n    nginxConfScript=\"/home/ubuntu/scripts/create_nginx_conf.sh\"\n\n    logging \"Creating nginx conf file1\"\n\n    echo \"#!/bin/bash\" > $nginxConfScript\n    logging \"Creating nginx conf file 2\"\n\n    echo \"\" >> $nginxConfScript\n\n    logging \"Creating nginx conf file 3\"\n\n    echo \"logging() {\" >> $nginxConfScript\n    echo \"    echo \\`date \\\"+%F %T\\\"\\` - \\$1 >> /home/ubuntu/logs/create_nginx_conf.txt\" >> $nginxConfScript\n    echo \"}\" >> $nginxConfScript\n    echo \"\" >> $nginxConfScript\n\n    echo \"#\" >> $nginxConfScript\n    echo \"# Function Name: create_nginx_conf\" >> $nginxConfScript\n    echo \"# \" >> $nginxConfScript\n    echo \"# Description  : This function creates a nginx config file for ach of the specified domain names\" >> $nginxConfScript\n    echo \"# \" >> $nginxConfScript\n    echo \"# Params\" >> $nginxConfScript\n    echo \"#   ip address\" >> $nginxConfScript\n    echo \"#   domain name\" >> $nginxConfScript\n    echo \"# \" >> $nginxConfScript\n    echo \"\" >> $nginxConfScript\n\n    echo \"create_nginx_conf() {\" >> $nginxConfScript\n    echo \"\" >> $nginxConfScript\n    echo \"  nginxFilename=\\\"/etc/nginx/sites-available/\\$2\\\"\" >> $nginxConfScript\n    echo \"  rm /etc/nginx/sites-enabled/\\$2 &>/dev/null\" >> $nginxConfScript\n    echo \"  rm \\$nginxFilename &>/dev/null\" >> $nginxConfScript\n    echo \"\" >> $nginxConfScript\n    echo \"  echo \\\"server {\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"  client_max_body_size 64M;\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"  listen 80;\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"  server_name www.\\$2 \\$2 \\$1;\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"  location / {\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"      proxy_pass             http://127.0.0.1:3000;\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"      proxy_read_timeout     60;\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"      proxy_connect_timeout  60;\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"      proxy_redirect         off;\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"      # Allow the use of websockets\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"      proxy_http_version 1.1;\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"      proxy_set_header Upgrade \\\\\\$http_upgrade;\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"      proxy_set_header Connection 'upgrade';\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"      proxy_set_header Host \\\\\\$host;\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"      proxy_cache_bypass \\\\\\$http_upgrade;\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"  }\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  echo \\\"}\\\" >> \\$nginxFilename\" >> $nginxConfScript\n    echo \"  ln -s \\$nginxFilename /etc/nginx/sites-enabled/\" >> $nginxConfScript\n    echo \"}\" >> $nginxConfScript\n\n    echo \"\" >> $nginxConfScript\n    echo \"#\" >> $nginxConfScript\n    echo \"# Create the following nginx config files\" >> $nginxConfScript\n    echo \"#\" >> $nginxConfScript\n    echo \"create_nginx_conf \"",
                            {
                              "Ref": "tutorseekersukdevnextstaticip"
                            },
                            "\" dev.cameronguy.biz\" >> $nginxConfScript\n    echo \"\" >> $nginxConfScript\n\n    logging \"Creating nginx conf file 4\"\n\n    chown ubuntu:ubuntu $nginxConfScript\n    chmod 755 $nginxConfScript\n\n}\n\n# \n# \n#\nupdate_bashrc_files() {\n\n    logging \"Setting root bashrc\"\n\n    touch ~/.bash_profile\n\n    export XDG_CONFIG_HOME=\"/home/ubuntu\"\n    export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n    [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm\n\n    echo \"export XDG_CONFIG_HOME=$XDG_CONFIG_HOME\" >> /root/.bashrc\n    echo \"export NVM_DIR=$NVM_DIR\" >> /root/.bashrc\n    echo \". $NVM_DIR/nvm.sh\" >> /root/.bashrc\n\n    logging \"Setting ubuntu bashrc\"\n    echo \"export XDG_CONFIG_HOME=$XDG_CONFIG_HOME\" >> /home/ubuntu/.bashrc\n    echo \"export NVM_DIR=$NVM_DIR\" >> /home/ubuntu/.bashrc\n    echo \". $NVM_DIR/nvm.sh\" >> /home/ubuntu/.bashrc\n\n    logging \"Completed updating root bashrc\"\n}\n\n# \n# \n#\ncreate_install_node_script() {\n\n    nodeScript=\"/home/ubuntu/scripts/install_node.sh\"\n    logging \"Create script to install node\"\n\n    echo \"#!/bin/bash\" > $nodeScript\n    logging \"Create script to install node 1\"\n    echo \"\" >> $nodeScript\n    echo \"logging() {\" >> $nodeScript\n    echo \"    echo \\`date \\\"+%F %T\\\"\\` - \\$1 >> /home/ubuntu/logs/install_node.txt\" >> $nodeScript\n    echo \"}\" >> $nodeScript\n    echo \"\" >> $nodeScript\n    logging \"Create script to install node 2\"\n    echo \"logging \\\"Starting node installation\\\"\" >> $nodeScript\n    echo \"curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash\" >>  $nodeScript\n    logging \"Create script to install node 3\"\n    echo \"\" >> $nodeScript\n    logging \"Create script to install node 4\"\n\n    echo \"chown ubuntu:ubuntu $NVM_DIR && chmod a+x $NVM_DIR\" >> $nodeScript\n    logging \"Create script to install node 5\"\n    echo \"logging \\\"Run nmv shell\\\"\" >> $nodeScript\n    echo \". $NVM_DIR/nvm.sh\" >> $nodeScript\n    logging \"Create script to install node 6\"\n    echo \"\" >> $nodeScript\n    logging \"Create script to install node 7\"\n\n    echo \"logging \\\"Installing node 18\\\"\" >> $nodeScript\n    echo \"nvm install 20\" >> $nodeScript\n    logging \"Create script to install node 8\"\n    echo \"\" >> $nodeScript\n    logging \"Create script to install node 9\"\n\n    echo \"logging \\\"Use node 20\\\"\" >> $nodeScript\n    echo \"nvm use 20\" >> $nodeScript\n    logging \"Create script to install node 20\"\n    echo \"\" >> $nodeScript\n\n    # echo \"logging \\\"Install yarn\\\"\" >> $nodeScript\n    # echo \"curl -o- -L https://yarnpkg.com/install.sh | bash\" >> $nodeScript\n    # logging \"Create script to install node 20\"\n    # echo \"export PATH=\\\"\\$HOME/.yarn/bin:\\$HOME/.config/yarn/global/node_modules/.bin:\\$PATH\\\"\" >> /root/.bashrc\n    # echo \"\" >> $nodeScript\n\n\n    echo \"logging \\\"Install PM2\\\"\" >> $nodeScript\n    echo \"npm i pm2 -g\" >> $nodeScript\n    echo \"\" >> $nodeScript\n\n    echo \"logging \\\"Install certbot\\\"\" >> $nodeScript\n    echo \"apt install certbot python3-certbot-nginx -y\" >>  $nodeScript\n    echo \"\" >> $nodeScript\n\n    echo \"hello\ngoodbye\" >> $nodeScript\n    echo \"\" >> $nodeScript\n    echo \"logging \\\"Restart nginx server\\\"\" >> $nodeScript\n    echo \"systemctl restart nginx >> /home/ubuntu/hello.txt 2>\\&1\" >> $nodeScript\n\n    chown ubuntu:ubuntu $nodeScript\n    chmod 755 $nodeScript\n\n\n    logging \"Completed node installation\"\n}\n\n#\ncreate_deploy_website_script() {\n\n    deployWebsite=\"/home/ubuntu/scripts/deploy_website.sh\"\n\n    logging \"Clone tutorseekers\"\n    echo \"#!/bin/bash\" > $deployWebsite\n    echo \"\" >> $deployWebsite\n    echo \"logging() {\" >> $deployWebsite\n    echo \"    echo \\`date \\\"+%F %T\\\"\\` - \\$1 >> /home/ubuntu/logs/deploy_website.txt\" >> $deployWebsite\n    echo \"}\" >> $deployWebsite\n    echo \"\" >> $deployWebsite\n    echo \"cd /home/ubuntu\" >> $deployWebsite\n    echo \"\" >> $deployWebsite\n\n    # Clone the repository\n    echo \"logging \\\"Clone tutorseekers\\\"\" >> $deployWebsite\n    # echo \"git clone https://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@github.com/ShareMyWebStuff/tutorseekers.co.uk.git tutorseekers_tmp\" >> $deployWebsite\n    echo \"git clone https://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@github.com/ShareMyWebStuff/tutorseekers-mono.git tutorseekers_tmp\" >> $deployWebsite\n# https://github.com/ShareMyWebStuff/tutorseekers-mono.git\n# Fine grain token - https://github.com/settings/personal-access-tokens/973258\n# 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\n\n    # Change in to the directory\n    echo \"cd tutorseekers_tmp/\" >> $deployWebsite\n    echo \"\" >> $deployWebsite\n\n    # Install the node modules\n    echo \"logging \\\"Run npm install\\\"\" >> $deployWebsite\n    echo \"npm install\" >> $deployWebsite\n    echo \"\" >> $deployWebsite\n\n    # Build the project\n    echo \"logging \\\"Run npm build\\\"\" >> $deployWebsite\n    echo \"npm run build\" >> $deployWebsite\n    echo \"\" >> $deployWebsite\n\n    # Change in to the home directory\n    echo \"cd /home/ubuntu\" >> $deployWebsite\n    echo \"\" >> $deployWebsite\n\n    # Remove the existing project\n    echo \"logging \\\"Remove tutorseekers\\\"\" >> $deployWebsite\n    echo \"rm -rf tutorseekers/\" >> $deployWebsite\n    echo \"\" >> $deployWebsite\n\n    # Rename the tmp directory to the project directory\n    echo \"logging \\\"Rename tutorseekers_tmp\\\"\" >> $deployWebsite\n    echo \"mv tutorseekers_tmp tutorseekers\" >> $deployWebsite\n    echo \"\" >> $deployWebsite\n\n    # Change in to the directory\n    echo \"cd tutorseekers/\" >> $deployWebsite\n    echo \"\" >> $deployWebsite\n\n    # Restart pm2\n    echo \"pm2 delete all\" >> $deployWebsite\n    echo \"pm2 startup >> /home/ubuntu/logs/deploy_website.txt\" >> $deployWebsite\n    echo \"pm2 start npm --name tutorseekers-dev -- start &>/dev/null\" >> $deployWebsite\n    echo \"pm2 save\" >> $deployWebsite\n\n\n    # echo \"logging \\\"Remove tutorseekers\\\"\" >> $deployWebsite\n    # echo \"rm -rf tutorseekers/\" >> $deployWebsite\n    # echo \"\" >> $deployWebsite\n    # echo \"logging \\\"Clone tutorseekers\\\"\" >> $deployWebsite\n    # echo \"git clone https://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@github.com/ShareMyWebStuff/tutorseekers.co.uk.git tutorseekers\" >> $deployWebsite\n    # echo \"\" >> $deployWebsite\n    # echo \"cd tutorseekers/\" >> $deployWebsite\n    # echo \"\" >> $deployWebsite\n    # echo \"logging \\\"Run npm install\\\"\" >> $deployWebsite\n    # echo \"npm install\" >> $deployWebsite\n    # echo \"\" >> $deployWebsite\n    # echo \"logging \\\"Run npm build\\\"\" >> $deployWebsite\n    # echo \"npm run build\" >> $deployWebsite\n    # echo \"\" >> $deployWebsite\n    # echo \"logging \\\"Run PM2 start\\\"\" >> $deployWebsite\n    # echo \"pm2 startup >> /home/ubuntu/logs/deploy_website.txt\" >> $deployWebsite\n    # echo \"pm2 start npm --name tutorseekers-dev -- start &>/dev/null\" >> $deployWebsite\n    # echo \"pm2 save\" >> $deployWebsite\n    # # # echo \"nohup pm2 start npm --name tutorseekers-dev &>/dev/null &\" >> $deployWebsite\n    # # # echo \"nohup pm2 start npm --name tutorseekers-dev -- start &>/dev/null &\" >> $deployWebsite\n    # # echo \"sleep 1\" >> $deployWebsite\n    # # echo \"pm2 status >> /home/ubuntu/logs/deploy_website.txt\" >> $deployWebsite\n    # echo \"\" >> $deployWebsite\n    echo \"logging \\\"Completed\\\"\" >> $deployWebsite\n\n    chown ubuntu:ubuntu $deployWebsite\n    chmod 755 $deployWebsite\n}\n\ncreate_scripts_directory\n\ncreate_script_to_upgrade_server\n\ncreate_nginx_conf_file\n\nupdate_bashrc_files\n\ncreate_install_node_script\n\ncreate_deploy_website_script\n\n# . /home/ubuntu/scripts/upgrade_server.sh\n\n# . /home/ubuntu/scripts/create_nginx_conf.sh\n\n# . /home/ubuntu/scripts/install_node.sh\n\n# . /home/ubuntu/scripts/deploy_website.sh\n"
                          ]
                        ]
                      }
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnInstance",
                  "version": "2.135.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.Instance",
              "version": "2.135.0"
            }
          },
          "tutorseekers-next-static-ip-association": {
            "id": "tutorseekers-next-static-ip-association",
            "path": "tutorseekers-uk-dev-frontend-deploy/tutorseekers-next-static-ip-association",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::EC2::EIPAssociation",
              "aws:cdk:cloudformation:props": {
                "eip": {
                  "Ref": "tutorseekersukdevnextstaticip"
                },
                "instanceId": {
                  "Ref": "tutorseekersukdevnextec2instanceDB23062D"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.CfnEIPAssociation",
              "version": "2.135.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "tutorseekers-uk-dev-frontend-deploy/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "tutorseekers-uk-dev-frontend-deploy/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.135.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.3.0"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "tutorseekers-uk-dev-frontend-deploy/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.135.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "tutorseekers-uk-dev-frontend-deploy/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.135.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.135.0"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.3.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.135.0"
    }
  }
}